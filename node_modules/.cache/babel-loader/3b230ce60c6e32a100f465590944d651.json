{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0415\\u0440\\u0430\\u0441\\u044B\\u043B\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\v\\\\Search-Filter-React\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './style.css';\nimport data from \"./TemplateData.json\";\nimport Home from './Home';\nimport Details from './Details';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'; // Corrected import statements\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortByYear, setSortByYear] = useState(false);\n  const [selectedItemId, setSelectedItemId] = useState(null);\n  const sortedData = [...data];\n\n  if (sortByYear) {\n    sortedData.sort((a, b) => a.year > b.year ? 1 : -1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"templateContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filterContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchInput_Container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"searchInput\",\n              type: \"text\",\n              placeholder: \"Search by title or year...\",\n              value: searchTerm,\n              onChange: event => setSearchTerm(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"yearFilterContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sortFilter\",\n              children: \"Sort by Year:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"sortFilter\",\n              type: \"checkbox\",\n              checked: sortByYear,\n              onChange: () => setSortByYear(!sortByYear)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"template_Container\",\n          children: sortedData.filter(val => {\n            const titleMatch = val.title.toLowerCase().includes(searchTerm.toLowerCase());\n            const yearMatch = val.year ? val.year.toString().includes(searchTerm) : false;\n            return titleMatch || yearMatch;\n          }).map(val => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"template\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/details/${val.id}`,\n              onClick: () => setSelectedItemId(val.id),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: val.image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: val.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), val.year && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Year: \", val.year]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, val.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/details/:id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"K5jWs1j6pOYjbTkr695yDWYOh9I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ерасыл/OneDrive/Рабочий стол/v/Search-Filter-React/src/App.js"],"names":["React","useState","data","Home","Details","BrowserRouter","Router","Route","Link","App","searchTerm","setSearchTerm","sortByYear","setSortByYear","selectedItemId","setSelectedItemId","sortedData","sort","a","b","year","event","target","value","filter","val","titleMatch","title","toLowerCase","includes","yearMatch","toString","map","id","image"],"mappings":"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","sourcesContent":["\r\nimport React, {useState} from \"react\";\r\nimport './style.css';\r\nimport data from \"./TemplateData.json\";\r\nimport Home from './Home';\r\nimport Details from './Details';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'; // Corrected import statements\r\n\r\n\r\nfunction App() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortByYear, setSortByYear] = useState(false);\r\n  const [selectedItemId, setSelectedItemId] = useState(null);\r\n\r\n  const sortedData = [...data];\r\n\r\n  if (sortByYear) {\r\n    sortedData.sort((a, b) => (a.year > b.year ? 1 : -1));\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <div className=\"templateContainer\">\r\n          <div className=\"filterContainer\">\r\n            <div className=\"searchInput_Container\">\r\n              <input\r\n                id=\"searchInput\"\r\n                type=\"text\"\r\n                placeholder=\"Search by title or year...\"\r\n                value={searchTerm}\r\n                onChange={(event) => setSearchTerm(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"yearFilterContainer\">\r\n              <label htmlFor=\"sortFilter\">Sort by Year:</label>\r\n              <input\r\n                id=\"sortFilter\"\r\n                type=\"checkbox\"\r\n                checked={sortByYear}\r\n                onChange={() => setSortByYear(!sortByYear)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"template_Container\">\r\n            {sortedData\r\n              .filter((val) => {\r\n                const titleMatch = val.title.toLowerCase().includes(searchTerm.toLowerCase());\r\n                const yearMatch = val.year ? val.year.toString().includes(searchTerm) : false;\r\n                return titleMatch || yearMatch;\r\n              })\r\n              .map((val) => (\r\n                <div className=\"template\" key={val.id}>\r\n                  <Link to={`/details/${val.id}`} onClick={() => setSelectedItemId(val.id)}>\r\n                    <img src={val.image} alt=\"\" />\r\n                    <h3>{val.title}</h3>\r\n                    {val.year && <p>Year: {val.year}</p>}\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n\r\n        <Route path=\"/details/:id\">\r\n          {/* Include the Details component or logic here */}\r\n          {/* Example: <Details data={data} selectedItemId={selectedItemId} /> */}\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}